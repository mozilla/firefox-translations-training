# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
---

loader: taskgraph.loader.transform:loader

transforms:
    - translations_taskgraph.transforms.worker_selection
    - translations_taskgraph.transforms.from_datasets:per_dataset
    - taskgraph.transforms.task_context
    - taskgraph.transforms.run:transforms
    - translations_taskgraph.transforms.cached_tasks:transforms
    - taskgraph.transforms.task:transforms

kind-dependencies:
    - clean-corpus
    - fetch
    - toolchain
    - bicleaner-model

tasks:
    ai-{provider}-{dataset_sanitized}-{src_locale}-{trg_locale}:
        description: bicleaner-ai for {provider} {dataset_sanitized} dataset {src_locale}-{trg_locale}
        attributes:
            dataset-category: train
            stage: bicleaner
            cleaning-type: bicleaner-ai
            cache:
                type: bicleaner-ai
                resources:
                    - pipeline/bicleaner/bicleaner.sh
                    - pipeline/bicleaner/requirements/bicleaner-ai.txt
                from-parameters:
                    bicleaner_threshold:
                        - training_config.experiment.bicleaner.dataset-thresholds.{dataset}
                        - training_config.experiment.bicleaner.default-threshold

        dataset-config:
            category: train
            substitution-fields:
                - description
                - name
                - dependencies
                - fetches
                - worker.env
                - attributes.cache.from-parameters.bicleaner_threshold
                - task-context.from-parameters.bicleaner_threshold
                - run.command


        task-context:
            from-parameters:
                bicleaner_threshold:
                    - training_config.experiment.bicleaner.dataset-thresholds.{dataset}
                    - training_config.experiment.bicleaner.default-threshold
            substitution-fields:
                - run.command
            from-object:
                bicleaner_reqs: $VCS_PATH/pipeline/bicleaner/requirements/bicleaner-ai.txt
                # TODO: set this to a sensible value based on number of GPUs?
                # or maybe it should also be `auto`?
                bicleaner_threads: auto

        worker-type: b-largegpu-largedisk
        worker:
            docker-image: {"in-tree": "train"}
            artifacts:
                - name: public/build
                  path: /builds/worker/artifacts
                  type: directory
            # 7 days. yes, it can take a while to clean a huge dataset
            max-run-time: 604800
            env:
                SRC: "{src_locale}"
                TRG: "{trg_locale}"
                # It would be preferable to use $MOZ_FETCHES_DIR here, but these don't
                # get interpreted.
                CUDA_DIR: fetches/cuda-toolkit
                CUDNN_DIR: fetches/cuda-toolkit
            # 128 happens when cloning this repository fails
            # 9001 is the code for when tensorflow fails to find GPUs on the system,
            # and biclenaer reverts to CPU time. Rather than waste time, we should
            # restart the task.
            retry-exit-status: [128,9001]

        # Don't run unless explicitly scheduled
        run-on-tasks-for: []

        run:
            using: run-task
            command:
                - bash
                - -c
                # `bicleaner.sh` args:
                # 1) prefix for input data
                # 2) prefix for output data
                # 3) bicleaner threshold
                # 4) number of threads to use - auto means nproc
                # 5) "pack dir" - which needs to be where the `bicleaner-src-trg` fetch was unpacked to
                - >-
                    pip install $MOZ_FETCHES_DIR/cyhunspell-2.0.3-cp310-cp310-linux_x86_64.whl &&
                    pip install $MOZ_FETCHES_DIR/kenlm-0.0.0-cp310-cp310-linux_x86_64.whl &&
                    pip install -r {bicleaner_reqs} &&
                    export PATH=$PATH:~/.local/bin &&
                    $VCS_PATH/pipeline/bicleaner/bicleaner.sh
                    $MOZ_FETCHES_DIR/{dataset_sanitized}
                    $TASK_WORKDIR/artifacts/{dataset_sanitized}
                    {bicleaner_threshold}
                    {bicleaner_threads}
                    $MOZ_FETCHES_DIR/bicleaner-ai-{src_locale}-{trg_locale}
        dependencies:
            "{provider}": clean-corpus-{provider}-{dataset_sanitized}-{src_locale}-{trg_locale}
            bicleaner-model: bicleaner-model-{src_locale}-{trg_locale}
        fetches:
            toolchain:
                - artifact: cyhunspell
                  extract: false
                - artifact: kenlm
                  extract: false
                - cuda-toolkit-11
            "{provider}":
                - artifact: "{dataset_sanitized}.{src_locale}.zst"
                  extract: false
                - artifact: "{dataset_sanitized}.{trg_locale}.zst"
                  extract: false
            bicleaner-model:
                - artifact: bicleaner-ai-{src_locale}-{trg_locale}.tar.zst
                  extract: true
