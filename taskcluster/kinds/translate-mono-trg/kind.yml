# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
---
loader: taskgraph.loader.transform:loader

transforms:
    - translations_taskgraph.transforms.marian_args:transforms
    - translations_taskgraph.transforms.worker_selection
    - taskgraph.transforms.task_context
    - translations_taskgraph.transforms.cast_to
    - taskgraph.transforms.chunking
    - taskgraph.transforms.run:transforms
    - translations_taskgraph.transforms.cached_tasks:transforms
    - taskgraph.transforms.task:transforms

kind-dependencies:
    - split-mono-trg
    - train-backwards
    - toolchain

# Translates monolingual data from target to source. This is used to synthesize
# training data for back translations.

tasks:
    trg:
        description: translate mono for {locale}
        # double curly braces are used for the chunk substitutions because
        # this must first be formatted by task-context to get src and trg locale
        label: translate-mono-trg-{src_locale}-{trg_locale}-{{this_chunk}}/{{total_chunks}}
        attributes:
            src_locale: "{src_locale}"
            trg_locale: "{trg_locale}"
            stage: translate-mono-trg
            dataset-category: mono-trg
            cache:
                type: translate-mono-trg
                resources:
                    - pipeline/translate/translate.sh
                    - taskcluster/scripts/pipeline/translate-taskcluster.sh
                from-parameters:
                    split_chunks: training_config.taskcluster.split-chunks
                    marian_args: training_config.marian-args.decoding-backward

        task-context:
            from-parameters:
                src_locale: training_config.experiment.src
                trg_locale: training_config.experiment.trg
                best_model: training_config.experiment.best-model
                locale: training_config.experiment.trg
                split_chunks: training_config.taskcluster.split-chunks
            substitution-fields:
                - description
                - fetches.train-backwards
                - dependencies
                - worker.env
                - attributes
                - label
                - run.command
                - chunk.total-chunks

        cast-to:
            int:
                - chunk.total-chunks

        chunk:
            total-chunks: "{split_chunks}"
            substitution-fields:
                - label
                - fetches.split-mono-trg
                - run.command

        dependencies:
            split-mono-trg: split-mono-trg-{trg_locale}
            train-backwards: train-backwards-{src_locale}-{trg_locale}

        fetches:
            toolchain:
                - marian
                - cuda-toolkit
            train-backwards:
                - artifact: vocab.spm
                  extract: false
                - artifact: final.model.npz.best-{best_model}.npz
                  extract: false
            split-mono-trg:
                - artifact: file.{this_chunk}.zst
                  extract: true

        marian-args:
            from-parameters: training_config.marian-args.decoding-backward

        worker-type: b-largegpu
        worker:
            docker-image: {"in-tree": "train"}
            max-run-time: 2591100
            artifacts:
                - name: public/build
                  path: /builds/worker/artifacts
                  type: directory
            env:
                CUDA_DIR: fetches/cuda-toolkit
                CUDNN_DIR: fetches/cuda-toolkit
            # 128 happens when cloning this repository fails
            retry-exit-status: [128]

        # Don't run unless explicitly scheduled
        run-on-tasks-for: []

        run:
            using: run-task
            command:
                - bash
                - -xc
                # double curly braces are used for the chunk substitutions because
                # this must first be formatted by task-context to get src and trg locale
                - >-
                    export MARIAN=$MOZ_FETCHES_DIR &&
                    $VCS_PATH/taskcluster/scripts/pipeline/translate-taskcluster.sh
                    $MOZ_FETCHES_DIR/file.{{this_chunk}}.zst
                    artifacts
                    plain
                    $MOZ_FETCHES_DIR/vocab.spm
                    $MOZ_FETCHES_DIR/*.npz
                    {marian_args}
